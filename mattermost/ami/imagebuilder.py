from aws_cdk import Aws, CfnParameter
from aws_cdk import aws_iam as iam
from aws_cdk import aws_s3 as s3
from aws_cdk import aws_sns as sns
from aws_cdk.aws_imagebuilder import (
    CfnComponent,
    CfnImagePipeline,
    CfnImageRecipe,
    CfnInfrastructureConfiguration
)
from constructs import Construct

from mattermost.common import util


def component(scope: Construct) -> CfnComponent:
  return CfnComponent(
      scope,
      'Component',
      data=util.from_file(
          'mattermost/ami/resources/component.yaml', {'STACK': Aws.STACK_NAME}),
      name=Aws.STACK_NAME,
      platform='Linux',
      version='0.1.0')


def image_recipe(
    scope: Construct, base_ami: CfnParameter,
    component: CfnComponent) -> CfnImageRecipe:
  return CfnImageRecipe(
      scope,
      'ImageRecipe',
      components=[
          CfnImageRecipe.ComponentConfigurationProperty(
              component_arn=component.attr_arn),
      ],
      name=Aws.STACK_NAME,
      parent_image=base_ami.value_as_string,
      version='0.1.0')


def infrastructure_configuration(
    scope: Construct, builder_instance_profile: iam.CfnInstanceProfile,
    key_pair: CfnParameter, log_bucket: s3.CfnBucket,
    notification_topic: sns.CfnTopic):
  return CfnInfrastructureConfiguration(
      scope,
      'InfrastructureConfiguration',
      description=f'Generated by {Aws.STACK_NAME}',
      instance_profile_name=builder_instance_profile.ref,
      instance_types=['t3a.micro'],
      key_pair=key_pair.value_as_string,
      logging=CfnInfrastructureConfiguration.LoggingProperty(
          s3_logs=CfnInfrastructureConfiguration.S3LogsProperty(
              s3_bucket_name=log_bucket.ref)),
      name=Aws.STACK_NAME,
      resource_tags={'generated-by': Aws.STACK_NAME},
      sns_topic_arn=notification_topic.attr_topic_arn)


def image_pipeline(
    scope: Construct, image_recipe: CfnImageRecipe,
    infrastructure_configuration: CfnInfrastructureConfiguration):
  return CfnImagePipeline(
      scope,
      'ImagePipeline',
      infrastructure_configuration_arn=infrastructure_configuration.attr_arn,
      image_recipe_arn=image_recipe.attr_arn,
      name=Aws.STACK_NAME)
