import aws_cdk.aws_s3 as s3
from aws_cdk import Aws
from aws_cdk.aws_iam import CfnInstanceProfile, CfnRole
from constructs import Construct


def builder_instance_role(
    scope: Construct, log_bucket: s3.CfnBucket) -> CfnRole:
  return CfnRole(
      scope,
      'BuilderInstanceRole',
      assume_role_policy_document={
          'Version': '2012-10-17',
          'Statement': [
              {
                  'Effect': 'Allow',
                  'Principal': {
                      'Service': 'ec2.amazonaws.com',
                  },
                  'Action': 'sts:AssumeRole',
              },
          ],
      },
      description=f'Generated by {Aws.STACK_NAME}',
      managed_policy_arns=[
          'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      ],
      policies=[
          CfnRole.PolicyProperty(
              policy_document={
                  'Version': '2012-10-17',
                  'Statement': [
                      {
                          'Effect': 'Allow',
                          'Action': 'imagebuilder:GetComponent',
                          'Resource': '*',
                      },
                      {
                          'Effect': 'Allow',
                          'Action': 'kms:Decrypt',
                          'Resource': '*',
                          'Condition': {
                              'ForAnyValue:StringEquals': {
                                  'kms:EncryptionContextKeys': (
                                      'aws:imagebuilder:arn'),
                                  'aws:CalledVia': 'imagebuilder.amazonaws.com',
                              },
                          },
                      },
                      {
                          'Effect': 'Allow',
                          'Action': 's3:GetObject',
                          'Resource': 'arn:aws:s3:::ec2imagebuilder*',
                      },
                      {
                          'Effect': 'Allow',
                          'Action': 's3:PutObject',
                          'Resource': f'{log_bucket.attr_arn}/*',
                      },
                  ],
              },
              policy_name='policy'),
      ])


def builder_instance_profile(
    scope: Construct, builder_instance_role: CfnRole) -> CfnInstanceProfile:
  return CfnInstanceProfile(
      scope, 'BuilderInstanceProfile', roles=[builder_instance_role.ref])
